syntax = "proto3";

package gateway;

option go_package = "github.com/HardDie/mmr_boost_server/pkg/server";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service Application
{
    // Create application for boosting
    rpc Create(CreateRequest) returns (CreateResponse)
    {
        option (google.api.http) = {
            post : "/api/v1/private/applications"
            body : "*"
        };
    }
    // Getting a list of the applications you created
    rpc GetList(GetListRequest) returns (GetListResponse)
    {
        option (google.api.http) = {
            get : "/api/v1/private/applications"
        };
    }
    // Get the application you created
    rpc GetItem(GetItemRequest) returns (GetItemResponse)
    {
        option (google.api.http) = {
            get : "/api/v1/private/applications/{id}"
        };
    }
    // Getting a list of all applications. Access: admin, manager
    rpc GetManagementList(GetManagementListRequest) returns (GetManagementListResponse)
    {
        option (google.api.http) = {
            get : "/api/v1/management/applications"
        };
    }
    // Get the application by id
    rpc GetManagementItem(GetManagementItemRequest) returns (GetManagementItemResponse)
    {
        option (google.api.http) = {
            get : "/api/v1/management/applications/{id}"
        };
    }
    // Getting private information from an application by id
    rpc GetManagementPrivateItem(GetManagementItemRequest) returns (GetManagementPrivateItemResponse)
    {
        option (google.api.http) = {
            get : "/api/v1/management/applications/{id}/private"
        };
    }
}

// Enums

enum ApplicationTypeID {
    default_application_type_id = 0;
    boost_mmr = 1;
    calibration = 2;
}

enum ApplicationStatusID {
    default_application_status_id = 0;
    created = 1;
    awaits_payment = 2;
    paid = 3;
    in_progress = 4;
    done = 5;
    deleted = 6;
    canceled = 7;
    suspended = 8;
}

// Structures

message PublicApplicationObject
{
    int32 id = 1;
    int32 user_id = 2;
    ApplicationStatusID status_id = 3;
    ApplicationTypeID type_id = 4;
    int32 current_mmr = 5;
    int32 target_mmr = 6;
    string tg_contact = 7;
    bool is_private_set = 8;
    google.protobuf.Timestamp created_at = 9;
    google.protobuf.Timestamp updated_at = 10;
    optional google.protobuf.Timestamp deleted_at = 11;
}
message PrivateApplicationObject
{
    int32 id = 1;
    optional string steam_login = 2;
    optional string steam_password = 3;
    google.protobuf.Timestamp created_at = 4;
    google.protobuf.Timestamp updated_at = 5;
    optional google.protobuf.Timestamp deleted_at = 6;
}

// Request/Response

message CreateRequest
{
    ApplicationTypeID type_id = 1;
    int32 current_mmr = 2;
    int32 target_mmr = 3;
    string tg_contact = 4;
}
message CreateResponse
{
    PublicApplicationObject data = 1;
}

message GetListRequest
{
    optional ApplicationStatusID status_id = 1;
}
message GetListResponse
{
    repeated PublicApplicationObject data = 1;
}

message GetItemRequest
{
    int32 id = 1;
}
message GetItemResponse
{
    PublicApplicationObject data = 1;
}

message GetManagementListRequest
{
    optional ApplicationStatusID status_id = 1;
    optional int32 user_id = 2;
}
message GetManagementListResponse
{
    repeated PublicApplicationObject data = 1;
}

message GetManagementItemRequest
{
    int32 id = 1;
}
message GetManagementItemResponse
{
    PublicApplicationObject data = 1;
}

message GetManagementPrivateItemResponse
{
    PrivateApplicationObject data = 1;
}