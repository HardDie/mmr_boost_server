syntax = "proto3";

package gateway;

option go_package = "github.com/HardDie/mmr_boost_server/pkg/server";

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/empty.proto";
import "server_user.proto";

service Auth
{
    // Registration by email
    rpc Register(RegisterRequest) returns (google.protobuf.Empty)
    {
        option (google.api.http) = {
            post : "/api/v1/auth/register"
            body : "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security : {}
        };
    }
    // Login with username and password
    rpc Login(LoginRequest) returns (google.protobuf.Empty)
    {
        option (google.api.http) = {
            post : "/api/v1/auth/login"
            body : "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security : {}
        };
    }
    // Validate email with received code
    rpc ValidateEmail(ValidateEmailRequest) returns (google.protobuf.Empty)
    {
        option (google.api.http) = {
            get : "/api/v1/auth/validate_email"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security : {}
        };
    }
    // Send validation email again
    rpc SendValidationEmail(SendValidationEmailRequest) returns (google.protobuf.Empty)
    {
        option (google.api.http) = {
            post : "/api/v1/auth/send_validation_email"
            body : "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security : {}
        };
    }
    // Getting information about the current user
    rpc User(google.protobuf.Empty) returns (UserResponse)
    {
        option (google.api.http) = {
            get : "/api/v1/private/auth/user"
        };
    }
    // Close the current session
    rpc Logout(google.protobuf.Empty) returns (google.protobuf.Empty)
    {
        option (google.api.http) = {
            post : "/api/v1/private/auth/logout"
            body : "*"
        };
    }
    // Send reset password email
    rpc ResetPasswordEmail(ResetPasswordEmailRequest) returns (google.protobuf.Empty)
    {
        option (google.api.http) = {
            post : "/api/v1/auth/reset_password_email"
            body : "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security : {}
        };
    }
    // Reset password
    rpc ResetPassword(ResetPasswordRequest) returns (google.protobuf.Empty)
    {
        option (google.api.http) = {
            post : "/api/v1/auth/reset_password"
            body : "*"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            security : {}
        };
    }
}

// Request/Response

message RegisterRequest
{
    string username = 1;
    string password = 2;
    string email = 3;
}

message LoginRequest
{
    string username = 1;
    string password = 2;
}

message ValidateEmailRequest
{
    string code = 1;
}

message SendValidationEmailRequest
{
    string username = 1;
}

message UserResponse
{
    UserObject data = 1;
}

message ResetPasswordEmailRequest
{
    string username = 1;
    string email = 2;
}

message ResetPasswordRequest
{
    string code = 1;
    string username = 2;
    string new_password = 3;
}
