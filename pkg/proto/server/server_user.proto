syntax = "proto3";

package gateway;

option go_package = "github.com/HardDie/mmr_boost_server/pkg/server";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service User
{
    // Updating the password for a user
    rpc Password(PasswordRequest) returns (google.protobuf.Empty)
    {
        option (google.api.http) = {
            patch : "/api/v1/private/user/password"
            body : "*"
        };
    }
    // Updating the steam id for a user
    rpc SteamID(SteamIDRequest) returns (SteamIDResponse)
    {
        option (google.api.http) = {
            patch : "/api/v1/private/user/steam_id"
            body : "*"
        };
    }
}

// Enums

enum UserRoleID {
    default_role_id = 0;
    admin = 1;
    manager = 2;
    booster = 3;
    user = 4;
}

// Structures

message UserObject
{
    int32 id = 1;
    string email = 2;
    string username = 3;
    UserRoleID role_id = 4;
    optional string steam_id = 5;
    bool is_activated = 6;
    google.protobuf.Timestamp created_at = 7;
    google.protobuf.Timestamp updated_at = 8;
    optional google.protobuf.Timestamp deleted_at = 9;
}

// Request/Response

message PasswordRequest
{
    string new_password = 1;
    string old_password = 2;
}

message SteamIDRequest
{
    string steam_id = 1;
}
message SteamIDResponse
{
    UserObject data = 1;
}